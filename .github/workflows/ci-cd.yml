name: Deploy to EC2 Instances

on:
  push:
    branches: [ master, Development ]
  pull_request:
    branches: [ master, Development ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install backend dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt

    - name: Run backend tests
      run: |
        cd backend/Computex
        python manage.py test

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install frontend dependencies
      run: |
        cd ComputexFrontend
        npm install

    - name: Build frontend
      run: |
        cd ComputexFrontend
        npm run build

    - name: Deploy to EC2 instances
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        FRONTEND_HOST: ${{ secrets.FRONTEND_HOST }}
        BACKEND_HOST: ${{ secrets.BACKEND_HOST }}
        DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        scp -i private_key -o StrictHostKeyChecking=no -r ComputexFrontend/build/* ubuntu@$FRONTEND_HOST:/home/ubuntu/frontend
        scp -i private_key -o StrictHostKeyChecking=no -r backend/Computex/* ubuntu@$BACKEND_HOST:/home/ubuntu/backend/Computex
        ssh -i private_key -o StrictHostKeyChecking=no ubuntu@$BACKEND_HOST '
          cd /home/ubuntu/backend/Computex &&
          source ../venv/bin/activate &&
          pip install -r requirements.txt &&
          python manage.py migrate &&
          sudo systemctl restart gunicorn
        '
        ssh -i private_key -o StrictHostKeyChecking=no ubuntu@$FRONTEND_HOST 'sudo systemctl restart nginx'